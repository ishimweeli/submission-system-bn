generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String             @unique
  staff_id         String             @unique
  password         String
  assignments      Assignment[]
  submissions      Submission[]
  role             UserRole           @default(STUDENT)
  invited          Boolean            @default(false)
  AssignmentToUser AssignmentToUser[]
}

enum UserRole {
  ADMIN
  STUDENT
  LECTURER
}

model Assignment {
  id               Int                @id @default(autoincrement())
  title            String
  description      String
  deadline         DateTime
  assignmentId     String             @unique
  isDraft          Boolean            @default(true)
  author           User               @relation(fields: [authorId], references: [id])
  authorId         Int
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  AssignmentToUser AssignmentToUser[]
  submissions      Submission[]
}

model Submission {
  id             Int        @id @default(autoincrement())
  assignment     Assignment @relation(fields: [assignmentId], references: [assignmentId], onDelete: Cascade)
  assignmentId   String     
  student        User       @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId      Int
  submissionCode String     @unique
  snapshots      Snapshot[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Snapshot {
  id           Int        @id @default(autoincrement())
  name         String
  filepath     String
  submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  submissionId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model AssignmentToUser {
  id           Int        @id @unique @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  assignment   Assignment @relation(fields: [assignmentId], references: [assignmentId], onDelete: Cascade)
  assignmentId String
  submitted       Boolean  @default(false)

  @@unique([userId, assignmentId])
}
